---

- name: "configuration play." 
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for:
        timeout: 600
        host: "{{ inventory_hostname }}"
        port: 22
      delegate_to: localhost  # Wait on the Ansible controller host


  roles:
    - name: "Install Python and Update Packages"
      tasks:
        - name: Install Python for Ansible
          raw: apt-get update && apt-get install -y python3-pip
          become: true

        - name: Update package cache
          apt:
            update_cache: yes
          become: true

        - name: Upgrade all packages
          apt:
            upgrade: dist
            autoremove: yes
          become: true
          
    - name: "Install Node.js and PM2"
      tasks:
        - name: Install Node.js and npm
          apt:
            name: ["nodejs", "npm"]
            state: latest
          become: true

        - name: Install PM2
          npm:
            name: pm2
            global: yes
          become: true      


  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  